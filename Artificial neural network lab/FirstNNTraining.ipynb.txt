{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Trainig Neural Network**\n",
    "Import all libraries\n",
    "\n",
    "1. Create a dataset/Load dataset\n",
    "\n",
    "    a. Separate Features and Target in case of Supervised Learning scenarion\n",
    "\n",
    "    b. Split Dataset into Train and Test(Validation) set\n",
    "\n",
    "    c. Normalize dataset\n",
    "\n",
    "    d. Convert data into pytorch tensor  \n",
    "\n",
    " \n",
    "2. Defining a Neural Network model\n",
    "    a. Define Neural Network architecture\n",
    "    b. Create Model\n",
    "3. Choose a loss function\n",
    "4. Define an optimizer\n",
    "5. Visualize Loss \n",
    "6. Run a training loop, where for each sample of the dataset, we repeat:\n",
    "\n",
    "    a. Calculating loss (forward pass)\n",
    "\n",
    "    b. Calculating local gradients\n",
    "    \n",
    "    c. Updating model parameters\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [],
   "source": [
    "import torch\n",
    "import torch.nn as nn\n",
    "import torch.optim as optim\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "from sklearn.metrics import accuracy_score\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Load/Create dataset\n",
    "data = pd.read_csv('../heartAttackPred/heart.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Separate features and target\n",
    "X = data.iloc[:, :-1].values  # all columns except the last one (features)\n",
    "y = data.iloc[:, -1].values   # last column (output)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Train and Test set\n",
    "# Split the data into train and test sets\n",
    "# Split the data into train and test sets\n",
    "X_train, X_val, y_train, y_val = train_test_split(X, y, test_size=0.2, random_state=42)\n",
    "#print(\"This is y train\",y_train, \"\\n\\n Y_val\", y_val)\n",
    "#print(\"Before normalization\",X_train[1])\n",
    "# Normalize/Standardize the data\n",
    "scaler = StandardScaler()\n",
    "X_train = scaler.fit_transform(X_train)\n",
    "X_val = scaler.transform(X_val)\n",
    "\n",
    "#print(\" \\n\\n with normalization\",X_train[1])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Convert data to PyTorch tensors\n",
    "X_train = torch.tensor(X_train, dtype=torch.float32)\n",
    "X_val = torch.tensor(X_val, dtype=torch.float32)\n",
    "#print(\"y_train\", y_train)\n",
    "y_train = torch.tensor(y_train, dtype=torch.float32).unsqueeze(1)\n",
    "#print(\"y_train unsqueezed\", y_train)\n",
    "y_val = torch.tensor(y_val, dtype=torch.float32).unsqueeze(1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [],
   "source": [
    "# 2). Defining a neural network model:\n",
    "# Creating Model\n",
    "# Define neural network architecture (Number of Layers (3 including Input Layer))\n",
    "\n",
    "input_size = X_train.shape[1]  # Number of features\n",
    "hidden_size = 32               # You can tune this parameter\n",
    "output_size = 1                # Binary classification (heart attack or not)\n",
    "\n",
    "# Define the model\n",
    "model = nn.Sequential(\n",
    "    nn.Linear(input_size, hidden_size),\n",
    "    nn.ReLU(),\n",
    "    nn.Linear(hidden_size, hidden_size),\n",
    "    nn.ReLU(),\n",
    "    nn.Linear(hidden_size, output_size),\n",
    "    nn.Sigmoid()  # Sigmoid for binary classification\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [],
   "source": [
    "# 3 and 4). # Define the loss function and optimizer\n",
    "criterion = nn.BCELoss()  # Binary Cross Entropy\n",
    "optimizer = optim.Adam(model.parameters(), lr=0.001)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch [10/200], Loss: 0.6689, Val Loss: 0.6613, Train Acc: 0.7975, Val Acc: 0.8361\n",
      "Epoch [20/200], Loss: 0.6356, Val Loss: 0.6223, Train Acc: 0.7975, Val Acc: 0.8689\n",
      "Epoch [30/200], Loss: 0.5916, Val Loss: 0.5718, Train Acc: 0.7975, Val Acc: 0.8689\n",
      "Epoch [40/200], Loss: 0.5348, Val Loss: 0.5088, Train Acc: 0.8099, Val Acc: 0.8689\n",
      "Epoch [50/200], Loss: 0.4712, Val Loss: 0.4462, Train Acc: 0.8347, Val Acc: 0.8525\n",
      "Epoch [60/200], Loss: 0.4143, Val Loss: 0.4016, Train Acc: 0.8430, Val Acc: 0.8361\n",
      "Epoch [70/200], Loss: 0.3739, Val Loss: 0.3826, Train Acc: 0.8512, Val Acc: 0.8361\n",
      "Epoch [80/200], Loss: 0.3484, Val Loss: 0.3828, Train Acc: 0.8430, Val Acc: 0.8361\n",
      "Epoch [90/200], Loss: 0.3307, Val Loss: 0.3908, Train Acc: 0.8678, Val Acc: 0.8689\n",
      "Epoch [100/200], Loss: 0.3165, Val Loss: 0.3985, Train Acc: 0.8802, Val Acc: 0.8525\n",
      "Epoch [110/200], Loss: 0.3042, Val Loss: 0.4047, Train Acc: 0.8843, Val Acc: 0.8689\n",
      "Epoch [120/200], Loss: 0.2926, Val Loss: 0.4111, Train Acc: 0.8884, Val Acc: 0.8689\n",
      "Epoch [130/200], Loss: 0.2810, Val Loss: 0.4186, Train Acc: 0.8926, Val Acc: 0.8689\n",
      "Epoch [140/200], Loss: 0.2693, Val Loss: 0.4263, Train Acc: 0.8926, Val Acc: 0.8689\n",
      "Epoch [150/200], Loss: 0.2575, Val Loss: 0.4364, Train Acc: 0.8926, Val Acc: 0.8689\n",
      "Epoch [160/200], Loss: 0.2454, Val Loss: 0.4482, Train Acc: 0.9050, Val Acc: 0.8525\n",
      "Epoch [170/200], Loss: 0.2337, Val Loss: 0.4627, Train Acc: 0.9091, Val Acc: 0.8525\n",
      "Epoch [180/200], Loss: 0.2220, Val Loss: 0.4775, Train Acc: 0.9215, Val Acc: 0.8525\n",
      "Epoch [190/200], Loss: 0.2103, Val Loss: 0.4940, Train Acc: 0.9298, Val Acc: 0.8361\n",
      "Epoch [200/200], Loss: 0.1990, Val Loss: 0.5108, Train Acc: 0.9298, Val Acc: 0.8361\n"
     ]
    },
    {
     "data": {
      "image/png": "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0KE4Ojqaury3b98eRVEYPXp0quOkvP+2bdui1+sZM2ZMqtbsxz8jPz8/s/kFAH777bentqSnJa3PffLkyamO0b59e44ePcrKlSufGneKd955hw0bNjBx4kRcXV1z9HtQQSUt6SJPqV+/PoULF6ZHjx4MGjQInU7HggULcrTL0fOMGjWKDRs20KBBA/r162e6mFSuXJkjR448c98KFSrg5+fH0KFDuXbtGs7OzixfvvyFxja3adOGBg0a8Pnnn3P58mX8/f1ZsWJFhseDOTo60rZtW9O4tyeX3XjttddYsWIF7dq1o3Xr1oSEhDB9+nT8/f2JiYnJ0LlS1pMdN24cr732Gq1ateLw4cP8+++/qe5ov/baa4wZM4ZevXpRv359jh8/zu+//252hx/UC1+hQoWYPn06Tk5OODg4EBgYmOZ4rjZt2tCsWTOGDx/O5cuXqVatGhs2bGD16tUMHjzYbBKarBAcHEx8fHyq8rZt2/Lee+/x66+/0rNnTw4ePIivry/Lli1j586dTJw40dSS0KdPH6KionjppZfw9vYmNDSUyZMnU716ddNYPX9/f5o2bUpAQABFihThwIEDLFu2jAEDBmTp+xFCFDxyfc44uT6rctv1+fr162zevDnV5HQpbGxsaN68OUuXLmXSpEk0a9aMd955h0mTJnH+/HlatGiB0Whk+/btNGvWjAEDBlCmTBmGDx/O119/TaNGjXjzzTexsbFh//79FCtWzLTeeJ8+ffjggw9o3749r7zyCkePHmX9+vWpPttnee2111iwYAEuLi74+/uze/duNm3alGrJuU8//ZRly5bRoUMH3n33XQICAoiKiuKvv/5i+vTpVKtWzbRtly5d+N///sfKlSvp16/fc5dEFFkgB2aQF+KZnrbES6VKldLcfufOnUrdunUVOzs7pVixYsr//vc/0xIRmzdvNm33tCVe0lruiieWvHjaEi/9+/dPte+Ty2IoiqIEBwcrNWrUUKytrRU/Pz9l5syZyieffKLY2to+5VN45NSpU0pQUJDi6OiouLm5KX379jUtGfL48iQ9evRQHBwcUu2fVuy3b99W3nnnHcXZ2VlxcXFR3nnnHeXw4cPpXuIlxZo1axRA8fLySnMJkbFjxyolS5ZUbGxslBo1aij//PNPqt+Dojx/iRdFURSDwaCMHj1a8fLyUuzs7JSmTZsqJ06c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XAlzc/Ma7xcREYGcnBzFIyUlRYVREhERqU6juye9YoJ5lsEREZGmqGiTKtqohsTc3BxaWlpIT09XWp6eng5ra+tK29+8eROJiYkYNGiQYplcLgdQPoVTfHw8WrVqVWk/qVQKqVSqeM72noiINMmztPWNLknPy8sDAJbBERGRxsnLy4OJiYm6w6hVOjo68PLyQnR0NIYMGQKgPOmOjo5GaGhope1dXV1x4cIFpWWfffYZ8vLy8O2339a4/WZ7T0REmqgmbX2jS9JtbW2RkpICIyOjF56/Ljc3F/b29khJSYGxsXEtRVi36vs5MH71q+/nwPjVq77HD9TOOYiiiLy8PNja2tZydJohLCwMISEh8Pb2ho+PDxYvXoyCggLFaO/BwcGws7NDZGQkdHV10b59e6X9TU1NAaDS8qdhe/8vxq9+9f0cGL961ff4gfp/DnXd1je6JF0ikaB58+a1ekxjY+N6+cv2qPp+Doxf/er7OTB+9arv8QMvfg4NrQf9UUFBQcjMzMSMGTOQlpYGT09P7N27VzGYXHJycq3MK/sotveVMX71q+/nwPjVq77HD9T/c6irtr7RJelERERU90JDQ6ssbweAw4cPP3XfNWvW1H5AREREGoqjuxMRERERERFpCCbpL0AqlWLmzJlKo8nWN/X9HBi/+tX3c2D86lXf4wcaxjnQ09X395jxq199PwfGr171PX6g/p9DXccviA1xvhciIiIiIiKieog96UREREREREQagkk6ERERERERkYZgkk5ERERERESkIZikExEREREREWkIJukvYNmyZXBycoKuri58fX1x6tQpdYdUpcjISHTu3BlGRkawtLTEkCFDEB8fr7RNr169IAiC0uPtt99WU8TKZs2aVSk2V1dXxfqioiJMnjwZzZo1g6GhIYYNG4b09HQ1RlyZk5NTpXMQBAGTJ08GoHnX/88//8SgQYNga2sLQRCwY8cOpfWiKGLGjBmwsbGBnp4eAgICcP36daVtsrKyMHr0aBgbG8PU1BQTJ05Efn6+2uMvLS1FeHg43N3dYWBgAFtbWwQHB+POnTtKx6jqPZs3b16dxF/dOQDAuHHjKsXXr18/pW009T0AUOX/B0EQsGDBAsU26nwPavK5WZPPnuTkZAwcOBD6+vqwtLTERx99hLKysjo5B6odbOvrTn1v79nW1207U9051If2nm09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CqtWrYKXlxc8PDyq3bYu34PqPjdr8tnj5+eHCxcuKP0BVfEHYtu2bVV+DvRi2NarX31t79nWa04709Dae7b1tUuj2/rnHnKukdu4caMolUrFNWvWiJcvXxbfeust0dTUVGlkP03xzjvviCYmJuLhw4fF1NRUxePBgweiKIrijRs3xNmzZ4t//fWXmJCQIP76669iy5YtxR49eqg58nIffvihePjwYTEhIUGMiYkRAwICRHNzczEjI0MURVF8++23RQcHB/HgwYPiX3/9Jfr5+Yl+fn5qjroymUwmOjg4iOHh4UrLNfH65+XliefOnRPPnTsnAhAXLVoknjt3TjEa6rx580RTU1Px119/Ff/++29x8ODBYosWLcTCwkLFMfr16yd27NhRPHnypHjs2DHRxcVFHDVqlNrjLykpEV999VWxefPmYlxcnNL/iYpROI8fPy5+8803YlxcnHjz5k1x/fr1ooWFhRgcHFwn8Vd3Dnl5eeLUqVPF2NhYMSEhQTxw4IDYqVMn0cXFRSwqKlIcQ1Pfgwo5OTmivr6+uHz58kr7q/s9qO5zUxSr/+wpKysT27dvL/bt21eMi4sT9+7dK1pYWIgRERF1cg704tjW162G0N6zra+7dqa6c6gP7T3berb1T8Ik/QUsWbJEdHBwEHV0dEQfHx/xxIkT6g6pSgCqfKxevVoURVFMTk4We/ToIZqZmYlSqVR0dnYWP/roIzEnJ0e9gT8UFBQk2tjYiDo6OqKdnZ0YFBQk3rhxQ7G+sLBQfPfdd8WmTZuK+vr64tChQ8XU1FQ1Rly1ffv2iQDE+Ph4peWaeP0PHTpU5e9MSEiIKIrlU7NMnz5dtLKyEqVSqejv71/pvO7duyeOGjVKNDQ0FI2NjcXx48eLeXl5ao8/ISHhif8nDh06JIqiKJ45c0b09fUVTUxMRF1dXdHNzU2cO3euUqOoznN48OCB2LdvX9HCwkJs0qSJ6OjoKE6aNKlS4qCp70GF//73v6Kenp6YnZ1daX91vwfVfW6KYs0+exITE8X+/fuLenp6orm5ufjhhx+KpaWldXIOVDvY1tedhtDes62vu3amunOoD+0923q29U8iPAyQiIiIiIiIiNSM96QTERERERERaQgm6UREREREREQagkk6ERERERERkYZgkk5ERERERESkIZikExEREREREWkIJulEREREREREGoJJOhEREREREZGGYJJOREREREREpCGYpBORygmCgB07dqg7DCIiIlIRtvVEtYdJOlEDN27cOAiCUOnRr18/dYdGREREtYBtPVHDoq3uAIhI9fr164fVq1crLZNKpWqKhoiIiGob23qihoM96USNgFQqhbW1tdKjadOmAMrL05YvX47+/ftDT08PLVu2xNatW5X2v3DhAvr06QM9PT00a9YMb731FvLz85W2iYqKQrt27SCVSmFjY4PQ0FCl9Xfv3sXQoUOhr68PFxcX7Ny5U7Hu/v37GD16NCwsLKCnpwcXF5dKf2gQERHRk7GtJ2o4mKQTEaZPn45hw4bh/PnzGD16NEaOHIkrV64AAAoKChAYGIimTZvi9OnT2LJlCw4cOKDUMC9fvhyTJ0/GW2+9hQsXLmDnzp1wdnZWeo3PP/8cI0aMwN9//40BAwZg9OjRyMrKUrz+5cuXsWfPHly5cgXLly+Hubl53V0AIiKiBo5tPVE9IhJRgxYSEiJqaWmJBgYGSo85c+aIoiiKAMS3335baR9fX1/xnXfeEUVRFH/44QexadOmYn5+vmL9rl27RIlEIqalpYmiKIq2trbitGnTnhgDAPGzzz5TPM/PzxcBiHv27BFFURQHDRokjh8/vnZOmIiIqJFhW0/UsPCedKJGoHfv3li+fLnSMjMzM8XPfn5+Suv8/PwQFxcHALhy5Qo8PDxgYGCgWN+tWzfI5XLEx8dDEATcuXMH/v7+T42hQ4cOip8NDAxgbGyMjIwMAMA777yDYcOG4ezZs+jbty+GDBmCrl27Pte5EhERNUZs64kaDibpRI2AgYFBpZK02qKnp1ej7Zo0aaL0XBAEyOVyAED//v2RlJSE3bt3Y//+/fD398fkyZOxcOHCWo+XiIioIWJbT9Rw8J50IsKJEycqPXdzcwMAuLm54fz58ygoKFCsj4mJgUQiQZs2bWBkZAQnJydER0e/UAwWFhYICQnB+vXrsXjxYvzwww8vdDwiIiL6F9t6ovqDPelEjUBxcTHS0tKUlmlraysGbNmyZQu8vb3x0ksv4aeffsKpU6ewatUqAMDo0aMxc+ZMhISEYNasWcjMzMSUKVMwduxYWFlZAQBmzZqFt99+G5aWlujfvz/y8vIQExODKVOm1Ci+GTNmwMvLC+3atUNxcTF+//13xR8OREREVD229UQNB5N0okZg7969sLGxUVrWpk0bXL16FUD5aKwbN27Eu+++CxsbG/z8889o27YtAEBfXx/79u3De++9h86dO0NfXx/Dhg3DokWLFMcKCQlBUVERvvnmG0ydOhXm5uYYPnx4jePT0dFBREQEEhMToaenh+7du2Pjxo21cOZERESNA9t6ooZDEEVRVHcQRKQ+giBg+/btGDJkiLpDISIiIhVgW09Uv/CedCIiIiIiIiINwSSdiIiIiIiISEOw3J2IiIiIiIhIQ7AnnYiIiIiIiEhDMEknIiIiIiIi0hBM0omIiIiIiIg0BJN0IiIiIiIiIg3BJJ2IiIiIiIhIQzBJJyIiIiIiItIQTNKJiIiIiIiINASTdCIiIiIiIiIN8f9A+bHe/4GS/QAAAABJRU5ErkJggg==",
      "text/plain": [
       "<Figure size 1200x500 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Lists to store loss and accuracy for plotting\n",
    "train_losses = []\n",
    "val_losses = []\n",
    "train_accuracies = []\n",
    "val_accuracies = []\n",
    "\n",
    "# Training loop\n",
    "num_epochs = 200  # You can adjust this\n",
    "for epoch in range(num_epochs):\n",
    "    # Training phase\n",
    "    model.train()  # Set model to training mode\n",
    "    outputs = model(X_train)\n",
    "    loss = criterion(outputs, y_train)\n",
    "    \n",
    "    optimizer.zero_grad()\n",
    "    loss.backward()\n",
    "    optimizer.step()\n",
    "    \n",
    "    # Evaluate on validation set\n",
    "    model.eval()  # Set model to evaluation mode\n",
    "    with torch.no_grad():\n",
    "        val_outputs = model(X_val)\n",
    "        val_loss = criterion(val_outputs, y_val)\n",
    "\n",
    "        # Compute accuracy\n",
    "        train_pred = (outputs > 0.5).float()\n",
    "        val_pred = (val_outputs > 0.5).float()\n",
    "        train_acc = accuracy_score(y_train, train_pred)\n",
    "        val_acc = accuracy_score(y_val, val_pred)\n",
    "\n",
    "    # Save loss and accuracy for plotting\n",
    "    train_losses.append(loss.item())\n",
    "    val_losses.append(val_loss.item())\n",
    "    train_accuracies.append(train_acc)\n",
    "    val_accuracies.append(val_acc)\n",
    "\n",
    "    if (epoch+1) % 10 == 0:\n",
    "        print(f'Epoch [{epoch+1}/{num_epochs}], Loss: {loss.item():.4f}, Val Loss: {val_loss.item():.4f}, '\n",
    "              f'Train Acc: {train_acc:.4f}, Val Acc: {val_acc:.4f}')\n",
    "\n",
    "# Plotting loss and accuracy\n",
    "plt.figure(figsize=(12, 5))\n",
    "\n",
    "# Plot loss\n",
    "plt.subplot(1, 2, 1)\n",
    "plt.plot(range(num_epochs), train_losses, label='Training Loss')\n",
    "plt.plot(range(num_epochs), val_losses, label='Validation Loss')\n",
    "plt.xlabel('Epochs')\n",
    "plt.ylabel('Loss')\n",
    "plt.title('Training and Validation Loss')\n",
    "plt.legend()\n",
    "\n",
    "# Plot accuracy\n",
    "plt.subplot(1, 2, 2)\n",
    "plt.plot(range(num_epochs), train_accuracies, label='Training Accuracy')\n",
    "plt.plot(range(num_epochs), val_accuracies, label='Validation Accuracy')\n",
    "plt.xlabel('Epochs')\n",
    "plt.ylabel('Accuracy')\n",
    "plt.title('Training and Validation Accuracy')\n",
    "plt.legend()\n",
    "\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
